{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACG,sBAAMC,SAVY,SAACC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKjB,SACG,uBACGO,KAAK,OACLC,MAAQT,EACRU,SAlBiB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCRhBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAWH,GAD9C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATpB,kBAYbM,GAZa,4CAAH,sDCWLO,EATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC3B,OACG,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCkBCO,EApBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEhB,ECHyB,SAAEA,GAE3B,MAA0Bd,mBAAS,CAChCqB,KAAM,GACNa,SAAS,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAU,WACPxB,EAASC,GACLwB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACrBf,KAAMkB,EACNL,SAAS,SAEf,CAAEpB,IAEEqB,EDZ0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACG,qCACG,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OACEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAK,SAAAC,GAAG,OACd,cAAC,EAAD,eAEQA,GADCA,EAAIC,aESbgB,EApBM,WAElB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACG,qCACG,8CACA,uBAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BACK2C,EAAWnB,KAAK,SAAEoB,GAAF,OACf,cAAC,EAAD,CAAqB7B,SAAW6B,GAAjBA,Y,MCZ9BC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.afa6b025.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n   const [inputValue, setInputValue] = useState('')\r\n\r\n   const handleInputChange = (e) => {\r\n      setInputValue(e.target.value)\r\n   }\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault()\r\n\r\n      if ( inputValue.trim().length > 2 ) {\r\n         setCategories( cats => [ inputValue, ...cats ] )\r\n         setInputValue('')\r\n      }\r\n   }\r\n\r\n   return (\r\n      <form onSubmit={ handleSubmit }>\r\n         <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n         />\r\n      </form>\r\n   )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async ( category ) => {\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category) }&limit=10&api_key=0EtUO15iCUlIhBr7ybcZyUEma7GxDfXU`\r\n   const resp = await fetch(url)\r\n   const { data } = await resp.json()\r\n\r\n   const gifs = data.map( img => {\r\n      return {\r\n         id: img.id,\r\n         title: img.title,\r\n         url: img.images?.downsized_medium.url\r\n      }\r\n   })\r\n   return gifs\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n   return (\r\n      <div className=\"card animate__animated animate__fadeIn\">\r\n         <img src={ url } alt={ title } />\r\n         <p>{ title }</p>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n   const { data:images, loading } = useFetchGifs( category )\r\n\r\n   return (\r\n      <>\r\n         <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n         { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n         <div className=\"card-grid\">\r\n            { images.map( img => (\r\n               <GifGridItem\r\n                  key={ img.id }\r\n                  { ...img }\r\n               />\r\n            )) }\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n   const [state, setState] = useState({\r\n      data: [],\r\n      loading: true,\r\n   })\r\n\r\n   useEffect(() => {\r\n      getGifs( category )\r\n         .then( imgs => setState({\r\n            data: imgs,\r\n            loading: false,\r\n         }))\r\n   }, [ category ])\r\n\r\n   return state\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n   const [categories, setCategories] = useState(['Overwatch'])\r\n\r\n   return (\r\n      <>\r\n         <h2>GifExpertApp</h2>\r\n         <hr />\r\n\r\n         <AddCategory setCategories={ setCategories } />\r\n\r\n         <ol>\r\n            { categories.map( ( cat ) => (\r\n               <GifGrid key={ cat } category={ cat } />\r\n            )) }\r\n         </ol>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}